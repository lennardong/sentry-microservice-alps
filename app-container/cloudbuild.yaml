# Variables for project ID, image name, service name, region, etc
# ... Substitutions are used for templating your cloudbuild.yaml file. 
# ... They allow you to define custom variables that can be referenced throughout the configuration file. 
# ... Substitution variables are defined with an underscore (_) prefix and can be used to replace parts of your configuration file during runtime. 
# edit: this is now passed a CLI variable via the makefile 

# substitutions:
#   _PROJECT_ID: "sentry-microservice-alps"
#   _IMAGE_NAME: "sentry-image"
#   _SERVICE_NAME: "sentry-service"
#   _REGION: "asia-southeast1"

steps:

# Step 1: Build the Docker image
# - 'gcr.io/cloud-builders/docker' is a pre-built builder that provides a Docker environment
# - The 'args' field specifies the Docker command to build the container image
# - '-t' flag is used to provide a name and optionally a tag for the container image in the 'name:tag' format
# - 'gcr.io/$_PROJECT_ID/$_IMAGE_NAME' is the name of the image with the project ID and image name
# - The final argument, '.', represents the build context (current directory) for the Docker build
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$_PROJECT_ID/$_IMAGE_NAME'
  - '.'

# Step 2: Push the Docker image to Google Container Registry (GCR)
# - 'gcr.io/cloud-builders/docker' is the same pre-built builder as in the previous step
# - The 'args' field specifies the Docker command to push the built container image to GCR
# - 'gcr.io/$_PROJECT_ID/$_IMAGE_NAME' is the name of the image with the project ID and image name
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/$_PROJECT_ID/$_IMAGE_NAME'

# Step 3: Deploy the Docker image to Google Cloud Run
# - 'gcr.io/google.com/cloudsdktool/cloud-sdk' is a pre-built builder that provides the Google Cloud SDK environment
# - 'entrypoint' field specifies 'gcloud' as the entry point for this step
# - The 'args' field specifies the command to deploy the application to Google Cloud Run with the following options:
#    - 'run deploy' deploys the application to Google Cloud Run
#    - '$_SERVICE_NAME' specifies the service name to deploy
#    - '--image gcr.io/$_PROJECT_ID/$_IMAGE_NAME' specifies the container image to deploy (previously pushed to GCR)
#    - '--region $_REGION' specifies the deployment region
#    - '--platform managed' specifies that the application will be deployed on Google's fully managed infrastructure
#    - '--allow-unauthenticated' flag allows public access to the service
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
  - 'run'
  - 'deploy'
  - '$_SERVICE_NAME'
  - '--image'
  - 'gcr.io/$_PROJECT_ID/$_IMAGE_NAME'
  - '--region'
  - '$_REGION'
  - '--platform'
  - 'managed'
  - '--allow-unauthenticated'
